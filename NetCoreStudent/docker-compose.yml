version: "3"

volumes:
    student-data-compose:

networks:
    backend:

# Descreve os serviços usados para criar containers
# Depois que o arquivo estiver pronto, executar o compose: $ docker-compose up -d
# Para exibir os containers criados pelo compose e em execução: $ docker-compose ps
# Para consultar os logs de criação dos containers pelo compose: $ docker-compose logs
# Para revomer os containers, volumes e redes criados pelo compose: $ docker-compose down -v
# A aplicação estará disponível a partir do navegador no endereço: http://192.168.99.100:5000
services:
    
    # Indica o início da descrição de um serviço que vai criar um container chamado mysql-compose
    # Desmembramento do comando abaixo:
    # $ docker container run -d --name mysql-compose -v student-data-compose:/var/lib/mysql 
    # -v /d/Projects/docker/NetCoreStudent/MySqlScripts:/docker-entrypoint-initdb.d -e MYSQL_ROOT_PASSWORD=123456 -e bind-address=0.0.0.0 
    # --network backend mysql:8.0.20
    mysql-compose:
        # Define a imagem Docker que será utilizada para criar o container
        image: "mysql:8.0.20"
        # Especifica os volumes utilizados pelos containers e os diretórios envolvidos
        volumes:
            - student-data-compose:/var/lib/mysql
            # Mapeamento entre script de inicialização criado na aplicação e o container mysql
            - /d/Projects/docker/NetCoreStudent/MySqlScripts:/docker-entrypoint-initdb.d
        # Define as redes com as quais o container vai se conectar
        networks:
            - backend
        # Define as variáveis de ambiente que serão utilizadas quando o container for criado
        environment:
            - MYSQL_ROOT_PASSWORD=123456
            - bind-address=0.0.0.0

    # Indica o início da descrição de um serviço que vai criar um container chamado mvc-compose
    # Desmembramento do comando abaixo:
    # $ docker container run -d --name mvc-compose -p 5000:80 -e DBHOST=172.17.0.2 -e DBPASSWORD=123456 -e DBPORT=3306 
    # --network backend appstudent:1.0
    mvc-compose:
        # Diz ao Docker como criar a imagem para o container do serviço
        build:
            # Define o diretório que será utilizado para criar a imagem. Usa o diretório atual da aplicação MVC
            context: .
            # Especifica o arquivo para criar a imagem
            dockerfile: Dockerfile
        networks:
            - backend
        ports:
            # Define o mapeamento das portas
            - 5000:80
        environment:
            # Define o nome do host
            - DBHOST=mysql-compose
            # Define a senha do mysql
            - DBPASSWORD=123456
            # Define a porta do mysql
            - DBPORT=3306
        depends_on:
            # Diz ao Docker a ordem na qual os containers serão criados. Dessa forma o container mysql-compose 
            # será iniciado antes do container mvc-compose
            - mysql-compose